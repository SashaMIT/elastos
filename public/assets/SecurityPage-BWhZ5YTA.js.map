{"version":3,"file":"SecurityPage-BWhZ5YTA.js","sources":["../../client/src/components/BlockVisualizer.tsx","../../client/src/components/FriendlyHashrate.tsx","../../client/src/components/HashScaleViz.tsx","../../client/src/components/MergeMiningViz.tsx","../../client/src/components/HashrateVisualizer.tsx","../../client/src/pages/SecurityPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { Boxes, Hash, Clock, CheckCircle2, ServerCrash, ExternalLink, Copy, ChevronRight } from 'lucide-react';\n\ninterface BlockData {\n  hash: string;\n  height: number;\n  time: number;\n  txlength: number;\n  poolInfo: { poolName: string };\n  hashrate: string;\n  previousblockhash?: string;\n}\n\nconst BlockVisualizer = () => {\n  const [currentBlock, setCurrentBlock] = useState<BlockData>({\n    hash: \"23411800476b40efe8e8874b3fea794bf8ac6d89503d37cc8c1cd386c62a6721\",\n    height: 1829335,\n    time: Date.now() / 1000,\n    txlength: 2,\n    poolInfo: { poolName: \"ViaBTC\" },\n    hashrate: \"363.2 EH/s\"\n  });\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [timeAgo, setTimeAgo] = useState('');\n  const [showCopied, setShowCopied] = useState(false);\n\n  const EXPLORER_URL = 'https://ela.elastos.io/block/';\n\n  const truncateHash = (hash: string, mobile = false): string => {\n    if (mobile) {\n      return `${hash.substring(0, 6)}...${hash.substring(hash.length - 4)}`;\n    }\n    return `${hash.substring(0, 8)}...${hash.substring(hash.length - 8)}`;\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    setShowCopied(true);\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  useEffect(() => {\n    const updateTime = () => {\n      const seconds = Math.floor(Date.now() / 1000 - currentBlock.time);\n      if (seconds < 60) setTimeAgo(`${seconds}s ago`);\n      else if (seconds < 3600) setTimeAgo(`${Math.floor(seconds / 60)}m ago`);\n      else setTimeAgo(`${Math.floor(seconds / 3600)}h ago`);\n    };\n    updateTime();\n    const interval = setInterval(updateTime, 1000);\n    return () => clearInterval(interval);\n  }, [currentBlock.time]);\n\n  const handleNewBlock = (newBlock: BlockData) => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setCurrentBlock(newBlock);\n      setIsTransitioning(false);\n    }, 500);\n  };\n\n  const fetchLatestBlock = async () => {\n    try {\n      const newBlockResponse = await fetch('https://ela.elastos.io/api/v1/newblock/');\n      const newBlockData = await newBlockResponse.json();\n\n      const blockResponse = await fetch(`https://ela.elastos.io/api/v1/block/${newBlockData.hash}`);\n      const blockData = await blockResponse.json();\n\n      handleNewBlock({\n        hash: blockData.hash,\n        height: blockData.height,\n        time: blockData.time,\n        txlength: blockData.tx.length,\n        poolInfo: { poolName: blockData.poolInfo?.poolName || 'Unknown' },\n        hashrate: (blockData.networkhashps / 1e18).toFixed(2) + ' EH/s',\n        previousblockhash: blockData.previousblockhash\n      });\n    } catch (error) {\n      console.error('Error fetching block data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchLatestBlock();\n    const interval = setInterval(fetchLatestBlock, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  interface StatBoxProps {\n    icon: React.ElementType;\n    color: string;\n    value: string | number;\n  }\n\n  const StatBox: React.FC<StatBoxProps> = ({ icon: Icon, color, value }) => (\n    <div className={`bg-${color}-50 px-2 py-1 rounded flex items-center justify-between group hover:bg-${color}-100 transition-colors`}>\n      <Icon className={`h-3 w-3 text-${color}-500`} />\n      <span className=\"text-xs font-medium\">{value}</span>\n    </div>\n  );\n\n  return (\n    <Card className={`w-full bg-white dark:bg-[#0A0A0A] transform transition-all duration-500 border-blue-100 dark:border-[#1a1a1a]\n      ${isTransitioning ? 'scale-95 opacity-0' : 'scale-100 opacity-100'}`}>\n      <div className=\"p-2\">\n        <div className=\"flex flex-col gap-2\">\n          {/* Top Section */}\n          <div className=\"flex flex-col sm:flex-row gap-2\">\n            <div className=\"relative shrink-0\">\n              <div className=\"w-8 h-8 bg-[#F6921A] rounded flex items-center justify-center animate-pulse\">\n                <Boxes className=\"w-4 h-4 text-white\" />\n              </div>\n              <div className=\"absolute -top-1 -right-1 bg-green-500 rounded-full w-2.5 h-2.5\">\n                <div className=\"absolute inset-0 bg-green-500 rounded-full animate-ping opacity-75\" />\n              </div>\n            </div>\n\n            {/* Stats Grid - Responsive */}\n            <div className=\"grid grid-cols-2 sm:grid-cols-5 gap-2 flex-1\">\n              <div className=\"bg-orange-50 dark:bg-[#1a1a1a] px-2 py-1 rounded flex items-center justify-between group hover:bg-orange-100 dark:hover:bg-[#222] transition-colors\">\n                <Hash className=\"h-3 w-3 text-[#F6921A] dark:text-[#F6921A]\" />\n                <span className=\"text-xs font-medium dark:text-gray-300\">{currentBlock.txlength} TXs</span>\n              </div>\n              <div className=\"bg-green-50 dark:bg-[#1a1a1a] px-2 py-1 rounded flex items-center justify-between group hover:bg-green-100 dark:hover:bg-[#222] transition-colors\">\n                <CheckCircle2 className=\"h-3 w-3 text-green-500 dark:text-green-400\" />\n                <span className=\"text-xs font-medium dark:text-gray-300\">{currentBlock.poolInfo.poolName}</span>\n              </div>\n              <div className=\"bg-purple-50 dark:bg-[#1a1a1a] px-2 py-1 rounded flex items-center justify-between group hover:bg-purple-100 dark:hover:bg-[#222] transition-colors\">\n                <ServerCrash className=\"h-3 w-3 text-purple-500 dark:text-purple-400\" />\n                <span className=\"text-xs font-medium dark:text-gray-300\">{currentBlock.hashrate}</span>\n              </div>\n              <div className=\"bg-orange-50 dark:bg-[#1a1a1a] px-2 py-1 rounded flex items-center justify-between group hover:bg-orange-100 dark:hover:bg-[#222] transition-colors\">\n                <Clock className=\"h-3 w-3 text-orange-500 dark:text-orange-400\" />\n                <span className=\"text-xs font-medium dark:text-gray-300\">{timeAgo}</span>\n              </div>\n              <div className=\"flex items-center justify-between gap-1 col-span-2 sm:col-span-1\">\n                <ChevronRight className=\"h-3 w-3 text-blue-500\" />\n                <div className=\"text-base font-mono font-bold text-blue-500\">\n                  #{currentBlock.height.toLocaleString()}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Hash Links - Responsive */}\n          <div className=\"flex flex-col sm:flex-row gap-2\">\n            {currentBlock.previousblockhash && (\n              <div className=\"bg-gray-50 dark:bg-[#1a1a1a] rounded px-2 py-1 flex-1 min-w-0\">\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400 whitespace-nowrap\">Previous:</span>\n                  <a \n                    href={`${EXPLORER_URL}${currentBlock.previousblockhash}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    title={`View block ${currentBlock.previousblockhash} in explorer`}\n                    className=\"text-xs font-mono text-blue-500 dark:text-blue-400 hover:text-blue-700 flex items-center gap-1 group truncate\"\n                  >\n                    <span className=\"hidden sm:inline\">{truncateHash(currentBlock.previousblockhash)}</span>\n                    <span className=\"sm:hidden\">{truncateHash(currentBlock.previousblockhash, true)}</span>\n                    <ExternalLink className=\"h-3 w-3 opacity-0 group-hover:opacity-100 transition-opacity shrink-0\" />\n                  </a>\n                  <button\n                    onClick={() => currentBlock.previousblockhash && copyToClipboard(currentBlock.previousblockhash)}\n                    className=\"opacity-0 group-hover:opacity-70 hover:opacity-100 transition-opacity shrink-0\"\n                    title=\"Copy hash\"\n                  >\n                    <Copy className=\"h-3 w-3 text-gray-500 dark:text-gray-400 hover:text-blue-500\" />\n                  </button>\n                </div>\n              </div>\n            )}\n\n            <div className=\"bg-gray-50 dark:bg-[#1a1a1a] rounded px-2 py-1 flex-1 min-w-0\">\n              <div className=\"flex items-center gap-1\">\n                <span className=\"text-xs text-gray-500 dark:text-gray-400 whitespace-nowrap\">Block:</span>\n                <a \n                  href={`${EXPLORER_URL}${currentBlock.hash}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  title={`View block ${currentBlock.hash} in explorer`}\n                  className=\"text-xs font-mono text-blue-500 dark:text-blue-400 hover:text-blue-700 flex items-center gap-1 group truncate\"\n                >\n                  <span className=\"hidden sm:inline\">{truncateHash(currentBlock.hash)}</span>\n                  <span className=\"sm:hidden\">{truncateHash(currentBlock.hash, true)}</span>\n                  <ExternalLink className=\"h-3 w-3 opacity-0 group-hover:opacity-100 transition-opacity shrink-0\" />\n                </a>\n                <button\n                  onClick={() => copyToClipboard(currentBlock.hash)}\n                  className=\"opacity-0 group-hover:opacity-70 hover:opacity-100 transition-opacity shrink-0\"\n                  title=\"Copy hash\"\n                >\n                  <Copy className=\"h-3 w-3 text-gray-500 dark:text-gray-400 hover:text-blue-500\" />\n                </button>\n                {showCopied && (\n                  <span className=\"text-xs text-green-500 dark:text-green-400\">Copied!</span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default BlockVisualizer;","import React, { useState, useEffect, useRef } from 'react';\nimport { Cpu, Lock, Info } from 'lucide-react';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { useHashrateData } from '../hooks/useHashrateData';\n\nconst FriendlyHashrate = () => {\n  const [locks, setLocks] = useState<Array<{\n    id: number;\n    x: number;\n    y: number;\n    size: number;\n    speed: number;\n    rotation: number;\n    opacity: number;\n  }>>([]);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const { data: hashrateData } = useHashrateData();\n  const bitcoinHashrate = hashrateData?.bitcoinHashrate ?? 0;\n\n  useEffect(() => {\n    const updateWidth = () => {\n      if (containerRef.current) {\n        setContainerWidth(containerRef.current.clientWidth);\n      }\n    };\n\n    updateWidth();\n    window.addEventListener('resize', updateWidth);\n    return () => window.removeEventListener('resize', updateWidth);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setLocks(prev => {\n        const filtered = prev.filter(p => p.y < 400);\n        const newLocks = [...Array(3)].map(() => ({\n          id: Date.now() + Math.random(),\n          x: Math.random() * containerWidth,\n          y: -20,\n          size: Math.random() * 12 + 8,\n          speed: Math.random() * 4 + 3,\n          rotation: Math.random() * 360,\n          opacity: Math.random() * 0.4 + 0.6\n        }));\n        return [...filtered, ...newLocks];\n      });\n    }, 50);\n\n    return () => clearInterval(interval);\n  }, [containerWidth]);\n\n  useEffect(() => {\n    const moveInterval = setInterval(() => {\n      setLocks(prev => \n        prev.map(lock => ({\n          ...lock,\n          y: lock.y + lock.speed,\n          rotation: lock.rotation + 1\n        }))\n      );\n    }, 16);\n\n    return () => clearInterval(moveInterval);\n  }, []);\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto bg-background/95 dark:bg-[#171717] backdrop-blur-sm border-0 rounded-xl shadow-lg\">\n      <div className=\"text-center mb-4\">\n        <h2 className=\"text-2xl font-bold dark:text-white\">\n          Bitcoin's Network Security\n          <TooltipProvider delayDuration={0}>\n            <Tooltip>\n              <TooltipTrigger asChild className=\"touch-auto\">\n                <Info className=\"inline-block w-4 h-4 ml-2 text-muted-foreground cursor-help\" />\n              </TooltipTrigger>\n              <TooltipContent className=\"p-3 touch-auto\">\n                <div className=\"text-sm\">\n                  <a \n                    href=\"https://api.minerstat.com/v2/coins?list=BTC&query=%7B%22method%22:%22GET%22,%22isArray%22:true%7D\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-blue-500 hover:text-blue-600 underline p-1\"\n                  >\n                    View data on Minerstat\n                  </a>\n                </div>\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        </h2>\n        <p className=\"text-gray-600 dark:text-gray-400 mt-2 flex items-center gap-2\">\n          {bitcoinHashrate.toFixed(2)} EH/s = {(bitcoinHashrate * 1e18).toLocaleString()} hashes per second 🔒\n          <TooltipProvider delayDuration={0}>\n            <Tooltip>\n              <TooltipTrigger asChild className=\"touch-auto\">\n                <Info className=\"w-4 h-4 text-muted-foreground cursor-help\" />\n              </TooltipTrigger>\n              <TooltipContent className=\"p-3 touch-auto\">\n                <div className=\"text-sm\">\n                  <a \n                    href=\"https://api.minerstat.com/v2/coins?list=BTC&query=%7B%22method%22:%22GET%22,%22isArray%22:true%7D\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-blue-500 hover:text-blue-600 underline p-1\"\n                  >\n                    View data on Minerstat\n                  </a>\n                </div>\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        </p>\n      </div>\n\n      <div \n        ref={containerRef}\n        className=\"relative h-64 dark:bg-[#262626] rounded-xl overflow-hidden border dark:border-[#262626]\"\n      >\n        <div className=\"absolute bottom-4 w-full flex justify-around\">\n          {[...Array(5)].map((_, i) => (\n            <Cpu key={i} size={32} className=\"dark:text-white animate-pulse\" style={{\n              animationDelay: `${i * 200}ms`\n            }} />\n          ))}\n        </div>\n\n        {locks.map(lock => (\n          <div\n            key={lock.id}\n            className=\"absolute transition-all duration-100\"\n            style={{\n              transform: `translate(${lock.x}px, ${lock.y}px) rotate(${lock.rotation}deg)`,\n              opacity: lock.opacity\n            }}\n          >\n            <Lock \n              size={lock.size} \n              className=\"dark:text-white\"\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FriendlyHashrate;","import React, { useState } from 'react';\nimport { ChevronRight, Lock } from 'lucide-react';\nimport { useHashrateData } from '../hooks/useHashrateData';\n\nconst HashScaleViz = () => {\n  const [selectedScale, setSelectedScale] = useState('H');\n  const { data: hashrateData } = useHashrateData();\n  const bitcoinHashrate = hashrateData?.bitcoinHashrate ?? 0;\n  \n  const scales = [\n    { symbol: 'H', name: 'Hash', power: 0, color: 'emerald' },\n    { symbol: 'MH', name: 'MegaHash', power: 6, color: 'blue' },\n    { symbol: 'GH', name: 'GigaHash', power: 9, color: 'purple' },\n    { symbol: 'TH', name: 'TeraHash', power: 12, color: 'violet' },\n    { symbol: 'PH', name: 'PetaHash', power: 15, color: 'pink' },\n    { symbol: 'EH', name: 'ExaHash', power: 18, color: 'orange' }\n  ];\n\n  const getCurrentScale = () => {\n    return scales.find(s => s.symbol === selectedScale) || scales[0];\n  };\n\n  const renderLocks = () => {\n    const scale = getCurrentScale();\n    const count = Math.min(10, Math.pow(2, scales.indexOf(scale)));\n    \n    return (\n      <div className=\"flex flex-wrap justify-center gap-2\">\n        {[...Array(count)].map((_, i) => (\n          <div \n            key={i} \n            className=\"relative group transition-all duration-300\"\n          >\n            <Lock \n              className={`text-${scale.color}-500 transition-all duration-300 animate-pulse`}\n              style={{\n                animationDelay: `${i * 100}ms`,\n              }}\n              size={24 + scales.indexOf(scale) * 4}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto p-4 bg-background/95 dark:bg-[#171717] backdrop-blur-sm border-0 dark:border-neutral-800 rounded-xl\">\n      {/* Scale Selection */}\n      <div className=\"flex justify-between items-center mb-6 overflow-x-auto py-2 px-1\">\n        {scales.map((scale, index) => (\n          <div \n            key={scale.symbol}\n            className=\"flex items-center\"\n          >\n            <button\n              onClick={() => setSelectedScale(scale.symbol)}\n              className={`flex flex-col items-center px-3 py-1.5 rounded-lg transition-all duration-300 ${\n                selectedScale === scale.symbol \n                  ? `bg-${scale.color}-100 dark:bg-${scale.color}-900/30 ring-2 ring-${scale.color}-500 dark:ring-${scale.color}-400` \n                  : 'hover:bg-accent/50 dark:hover:bg-accent/20'\n              }`}\n            >\n              <span className={`text-base font-bold text-${scale.color}-500`}>\n                {scale.symbol}\n              </span>\n              <span className=\"text-xs text-muted-foreground\">\n                10^{scale.power}\n              </span>\n            </button>\n            {index < scales.length - 1 && (\n              <ChevronRight className=\"text-muted-foreground mx-1\" size={16} />\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Visualization Area */}\n      <div className=\"bg-card/50 dark:bg-card/10 rounded-lg p-4 shadow-inner dark:shadow-none min-h-[160px] border border-border/50\">\n        <div className=\"text-center mb-4\">\n          <span className={`text-lg font-bold text-${getCurrentScale().color}-500 dark:text-${getCurrentScale().color}-400`}>\n            1 {getCurrentScale().name}\n          </span>\n          <span className=\"text-muted-foreground dark:text-muted-foreground/80\"> = </span>\n          <span className=\"font-mono dark:text-foreground/90\">\n            1{Array(getCurrentScale().power).fill('0').join('')}\n          </span>\n          <span className=\"text-muted-foreground dark:text-muted-foreground/80\"> calculations</span>\n        </div>\n        \n        {renderLocks()}\n        \n        <div className=\"mt-4 text-center text-sm text-muted-foreground\">\n          {getCurrentScale().symbol === 'EH' && (\n            <div className=\"text-orange-500 font-bold animate-pulse\">\n              Bitcoin's current hashrate: {bitcoinHashrate.toFixed(2)} EH/s\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                That's {(bitcoinHashrate * 1e18).toLocaleString()} calculations every second!\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"mt-4 text-center text-xs text-muted-foreground\">\n        Each step represents a 1000x increase in computational power\n      </div>\n    </div>\n  );\n};\n\nexport default HashScaleViz;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Cpu, Lock, Info } from 'lucide-react';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { useHashrateData } from '../hooks/useHashrateData';\n\ninterface Lock {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  speed: number;\n  rotation: number;\n  opacity: number;\n  type: 'bitcoin' | 'elastos';\n}\n\ntype LockType = 'bitcoin' | 'elastos';\n\nconst MergeMiningViz = () => {\n  const [locks, setLocks] = useState<Lock[]>([]);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [containerWidth, setContainerWidth] = useState(0);\n  const { data: hashrateData } = useHashrateData();\n  const bitcoinHashrate = hashrateData?.bitcoinHashrate ?? 0;\n  const elastosHashrate = hashrateData?.elastosHashrate ?? 0;\n  const securityPercentage = ((elastosHashrate/bitcoinHashrate) * 100).toFixed(1);\n\n  useEffect(() => {\n    const updateWidth = () => {\n      if (containerRef.current) {\n        setContainerWidth(containerRef.current.clientWidth);\n      }\n    };\n\n    updateWidth();\n    window.addEventListener('resize', updateWidth);\n    return () => window.removeEventListener('resize', updateWidth);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setLocks(prev => {\n        const filtered = prev.filter(p => p.y < 400);\n        const newLocks = [...Array(2)].map(() => {\n          const x = Math.random() * (containerWidth - 100);\n          const baseLock = {\n            y: -20,\n            size: Math.random() * 12 + 8,\n            speed: Math.random() * 4 + 3,\n            rotation: Math.random() * 360,\n            opacity: Math.random() * 0.4 + 0.6,\n          };\n          return [\n            {\n              ...baseLock,\n              id: Date.now() + Math.random(),\n              x: x,\n              type: 'bitcoin' as const\n            },\n            {\n              ...baseLock,\n              id: Date.now() + Math.random() + 1,\n              x: x,\n              type: 'elastos' as const\n            }\n          ];\n        }).flat();\n        return [...filtered, ...newLocks];\n      });\n    }, 50);\n\n    return () => clearInterval(interval);\n  }, [containerWidth]);\n\n  useEffect(() => {\n    const moveInterval = setInterval(() => {\n      setLocks(prev => \n        prev.map(lock => ({\n          ...lock,\n          y: lock.y + lock.speed,\n          x: lock.type === 'elastos' && lock.y > 150 ? \n            lock.x + (lock.y - 150) * 0.5 : lock.x,\n          rotation: lock.rotation + 1\n        }))\n      );\n    }, 16);\n\n    return () => clearInterval(moveInterval);\n  }, []);\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto bg-gradient-to-b from-background to-background/50 rounded-xl\">\n      <div \n        ref={containerRef}\n        className=\"relative h-80 bg-gradient-to-b from-accent/20 to-accent/5 rounded-xl overflow-hidden\"\n      >\n        {/* Network labels */}\n        <div className=\"absolute bottom-24 w-full flex justify-between px-8\">\n          <div className=\"text-orange-500 font-bold\">Bitcoin Network</div>\n          <div className=\"text-blue-500 font-bold\">Elastos Network</div>\n        </div>\n\n        {/* CPUs representing mining power */}\n        <div className=\"absolute bottom-4 w-full flex justify-between px-8\">\n          <div className=\"flex space-x-2\">\n            <Cpu size={32} className=\"text-orange-400 animate-pulse\" />\n            <Cpu size={32} className=\"text-orange-400 animate-pulse\" style={{ animationDelay: '200ms' }} />\n            <Cpu size={32} className=\"text-orange-400 animate-pulse\" style={{ animationDelay: '400ms' }} />\n          </div>\n          <div className=\"flex space-x-2\">\n            <Cpu size={32} className=\"text-blue-400 animate-pulse\" />\n            <Cpu size={32} className=\"text-blue-400 animate-pulse\" style={{ animationDelay: '200ms' }} />\n          </div>\n        </div>\n\n        {/* Divider showing work split */}\n        <div className=\"absolute top-1/3 left-1/2 h-2/3 border-r-2 border-dashed border-accent\" />\n\n        {locks.map(lock => (\n          <div\n            key={lock.id}\n            className=\"absolute transition-all duration-100\"\n            style={{\n              transform: `translate(${lock.x}px, ${lock.y}px) rotate(${lock.rotation}deg)`,\n              opacity: lock.opacity\n            }}\n          >\n            <Lock \n              size={lock.size} \n              className={lock.type === 'bitcoin' ? 'text-orange-500' : 'text-blue-500'}\n            />\n          </div>\n        ))}\n\n        {/* Hashrate indicator */}\n        <div className=\"absolute top-4 right-4 bg-card/90 rounded-lg p-2 text-sm\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"text-orange-500\">Bitcoin Hashrate: {bitcoinHashrate.toFixed(2)} EH/s</div>\n            <TooltipProvider delayDuration={0}>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Info className=\"w-4 h-4 text-muted-foreground cursor-help\" />\n                </TooltipTrigger>\n                <TooltipContent className=\"p-3 touch-auto\">\n                  <div className=\"text-sm\">\n                    <a \n                      href=\"https://api.minerstat.com/v2/coins?list=BTC&query=%7B%22method%22:%22GET%22,%22isArray%22:true%7D\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-blue-500 hover:text-blue-600 underline p-1\"\n                    >\n                      View data on Minerstat\n                    </a>\n                  </div>\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"text-blue-500\">Elastos Security: {securityPercentage}%</div>\n            <TooltipProvider delayDuration={0}>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Info className=\"w-4 h-4 text-muted-foreground cursor-help\" />\n                </TooltipTrigger>\n                <TooltipContent className=\"p-3 touch-auto\">\n                  <div className=\"text-sm\">\n                    <a \n                      href=\"https://ela.elastos.io/api/v1/data-statistics\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-blue-500 hover:text-blue-600 underline p-1\"\n                    >\n                      View data on Elastos Explorer\n                    </a>\n                  </div>\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MergeMiningViz;\n","import React, { useState, FC } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/Card';\nimport { Info } from \"lucide-react\";\nimport { Zap, Calculator, Cpu, Network, Server, Smartphone, Laptop, Building2, Monitor, Shield, Lock } from 'lucide-react';\nimport BlockVisualizer from './BlockVisualizer';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport FriendlyHashrate from './FriendlyHashrate';\nimport HashScaleViz from './HashScaleViz';\nimport MergeMiningViz from './MergeMiningViz';\nimport { useHashrateData } from '../hooks/useHashrateData';\n\ninterface Scale {\n  unit: string;\n  buttonText?: string;\n  base: number;\n  icon: React.ReactNode;\n  explanation: string;\n  details: string[];\n}\n\ninterface Scales {\n  smartphones: Scale;\n  computers: Scale;\n  datacenters: Scale;\n  supercomputers: Scale;\n}\n\ntype ScaleType = keyof Scales;\n\nconst HashrateVisualizer = () => {\n  const [selectedScale, setSelectedScale] = useState<ScaleType>('supercomputers');\n\n  const scales: Scales = {\n    supercomputers: {\n      unit: \"Frontier Supercomputers\",\n      buttonText: \"Supercomputers\",\n      base: 1_500_000_000_000,\n      icon: <Monitor className=\"w-5 h-5 text-[#F6921A]\" />,\n      explanation: \"Compared to Frontier, the world's fastest supercomputer (1.5 EH/s theoretical peak)\",\n      details: [\n        \"Frontier: 1.5 EH/s theoretical peak performance\",\n        \"World's first exascale computing system\",\n        \"Located at Oak Ridge National Laboratory\"\n      ]\n    },\n    datacenters: {\n      unit: \"Large data centers\",\n      buttonText: \"Data Centers\",\n      base: 500_000_000_000,\n      icon: <Building2 className=\"w-5 h-5 text-[#F6921A]\" />,\n      explanation: \"Based on data center with 1000 servers with multiple GPUs\",\n      details: [\n        \"1 EH/s = 1,000,000,000,000 MH/s\",\n        \"Data center hashrate: ~500 GH/s\",\n        \"Based on enterprise-scale operation with 1000+ servers\"\n      ]\n    },\n    computers: {\n      unit: \"High-end gaming PCs\",\n      buttonText: \"Gaming PCs\",\n      base: 160_000_000,\n      icon: <Laptop className=\"w-5 h-5 text-[#F6921A]\" />,\n      explanation: \"Based on RTX 4090 (~140 MH/s) + CPU (~20 MH/s) for SHA-256\",\n      details: [\n        \"1 EH/s = 1,000,000,000,000 MH/s\",\n        \"Gaming PC hashrate: ~160 MH/s (GPU + CPU)\",\n        \"Equivalent to high-end PC with RTX 4090\"\n      ]\n    },\n    smartphones: {\n      unit: \"iPhone calculations\",\n      buttonText: \"iPhones\",\n      base: 15_000_000,\n      icon: <Smartphone className=\"w-5 h-5 text-[#F6921A]\" />,\n      explanation: \"Based on iPhone CPU performing SHA-256 hashes at ~15 MH/s\",\n      details: [\n        \"1 EH/s = 1,000,000,000,000 MH/s\",\n        \"iPhone hashrate: ~15 MH/s per device\",\n        \"Shows equivalent number of iPhones needed to match network power\"\n      ]\n    }\n  };\n\n  const { data: hashrateData, isLoading, error } = useHashrateData();\n  const bitcoinHashrate = hashrateData?.bitcoinHashrate ?? 481;\n  const elastosHashrate = hashrateData?.elastosHashrate ?? 924;\n\n  if (isLoading) {\n    return (\n      <Card className=\"w-full max-w-3xl mx-auto bg-background/95 dark:bg-[#171717] backdrop-blur-sm border-0 dark:border-0\">\n        <CardHeader className=\"p-4 sm:p-6\">\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-8 bg-accent/20 rounded-lg w-3/4\"></div>\n            <div className=\"h-4 bg-accent/20 rounded w-1/2\"></div>\n          </div>\n        </CardHeader>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className=\"w-full max-w-3xl mx-auto bg-background/95 dark:bg-[#171717] backdrop-blur-sm border-0 dark:border-0\">\n        <CardHeader className=\"p-4 sm:p-6\">\n          <CardTitle className=\"text-red-500\">\n            Error loading hashrate data. Please try again later.\n          </CardTitle>\n        </CardHeader>\n      </Card>\n    );\n  }\n\n  const calculateEquivalent = (hashrate: number, base: number): number => {\n    return (hashrate * 1_000_000_000_000) / base;\n  };\n\n  const formatNumber = (num: number): string => {\n    if (num >= 1_000_000_000_000) {\n      return `${(num / 1_000_000_000_000).toFixed(1)} trillion`;\n    }\n    if (num >= 1_000_000_000) {\n      return `${(num / 1_000_000_000).toFixed(1)} billion`;\n    }\n    if (num >= 1_000_000) {\n      return `${(num / 1_000_000).toFixed(1)} million`;\n    }\n    return num.toLocaleString();\n  };\n\n  return (\n    <Card className=\"w-full max-w-3xl mx-auto bg-background/95 dark:bg-[#171717] backdrop-blur-sm border-0 dark:border-0\">\n      <CardHeader className=\"p-4 sm:p-6 space-y-2\">\n        <CardTitle className=\"flex items-start gap-2 text-lg sm:text-xl\">\n          <Zap className=\"w-5 h-5 sm:w-6 sm:h-6 text-[#F6921A] shrink-0 mt-1\" />\n          <span className=\"leading-tight\">\n            Bitcoin and Elastos Network Computing Power\n          </span>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"p-4 sm:p-6\">\n        <div className=\"space-y-6\">\n          {/* Dialog Buttons */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\">\n            <Dialog>\n              <DialogTrigger asChild>\n                <Button variant=\"outline\" className=\"w-full flex items-center gap-2 px-4 py-3 hover:bg-accent/50 font-[200]\">\n                  <Calculator className=\"w-5 h-5 text-[#F6921A]\" />\n                  What is Hashrate?\n                </Button>\n              </DialogTrigger>\n              <DialogContent \n                className=\"w-full sm:max-w-5xl p-3 sm:p-4 md:p-6 overflow-y-auto max-h-[90vh] backdrop-blur-sm mx-auto dark:bg-[#171717] dark:border-neutral-800\"\n                aria-labelledby=\"hashrate-dialog-title\"\n                aria-describedby=\"hashrate-dialog-description\"\n              >\n                <DialogHeader>\n                  <DialogTitle id=\"hashrate-dialog-title\">Understanding Hashrate</DialogTitle>\n                  <DialogDescription id=\"hashrate-dialog-description\">\n                    Understand how network hashrate secures blockchain transactions and its vital role in maintaining network security\n                  </DialogDescription>\n                </DialogHeader>\n                <div className=\"flex flex-col lg:flex-row gap-4 sm:gap-6 items-center\">\n                  <div className=\"text-muted-foreground space-y-4 sm:space-y-6 lg:w-1/2 text-left\">\n                    <p className=\"text-sm sm:text-base\">\n                      Hashrate measures how quickly a computer or network can solve cryptographic puzzles called \"hashes.\" In cryptocurrency networks, these puzzles secure the blockchain by verifying transactions and preventing tampering.\n                    </p>\n                    <p className=\"text-sm sm:text-base\">\n                      A higher hashrate means more computational power, making the network stronger and more secure against attacks, such as a 51% attack, where an entity could potentially control the network. This immense computational effort creates trust and ensures the network remains decentralized and tamper-proof.\n                    </p>\n                    <p className=\"text-sm sm:text-base\">\n                      Just as gold derives value from its scarcity and the effort required to mine it, cryptocurrency networks gain value from the energy and computing power securing them. Hashrate reflects not only security but also the overall health and activity of the network.\n                    </p>\n                  </div>\n                  <div className=\"lg:w-1/2 flex justify-center\">\n                    <div className=\"w-full max-w-[280px] sm:max-w-sm\">\n                      <FriendlyHashrate />\n                    </div>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n\n            <Dialog>\n              <DialogTrigger asChild>\n                <Button variant=\"outline\" className=\"w-full flex items-center gap-2 px-4 py-3 hover:bg-accent/50 font-[200]\">\n                  <Cpu className=\"w-5 h-5 text-[#F6921A]\" />\n                  What is EH/s?\n                </Button>\n              </DialogTrigger>\n              <DialogContent \n                className=\"w-full sm:max-w-2xl p-3 sm:p-4 md:p-6 overflow-y-auto max-h-[90vh] backdrop-blur-sm mx-auto dark:bg-[#171717] dark:border-neutral-800\"\n                aria-labelledby=\"ehs-dialog-title\"\n                aria-describedby=\"ehs-dialog-description\"\n              >\n                <DialogHeader>\n                  <DialogTitle id=\"ehs-dialog-title\">Understanding EH/s (ExaHashes per second)</DialogTitle>\n                  <DialogDescription id=\"ehs-dialog-description\">\n                    Explore the measurement units used for quantifying network computing power and security strength\n                  </DialogDescription>\n                </DialogHeader>\n                <div className=\"space-y-4 sm:space-y-6\">\n                  <div className=\"text-muted-foreground text-center\">\n                    <p className=\"text-sm sm:text-base mb-4\">EH/s stands for ExaHashes per second. To understand how big this is:</p>\n                    <div className=\"w-full max-w-[320px] sm:max-w-none mx-auto\">\n                      <HashScaleViz />\n                    </div>\n                    <p className=\"mt-4 text-sm sm:text-base\">\n                      So when we say Bitcoin's hashrate is {bitcoinHashrate} EH/s, it means the network is performing {bitcoinHashrate} quintillion calculations every second!\n                    </p>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n\n            <Dialog>\n              <DialogTrigger asChild>\n                <Button variant=\"outline\" className=\"w-full flex items-center gap-2 px-4 py-3 hover:bg-accent/50 font-[200]\">\n                  <Network className=\"w-5 h-5 text-[#F6921A]\" />\n                  What is Merge Mining?\n                </Button>\n              </DialogTrigger>\n              <DialogContent \n                className=\"w-full sm:max-w-5xl p-3 sm:p-4 md:p-6 overflow-y-auto max-h-[90vh] backdrop-blur-sm mx-auto dark:bg-[#171717] dark:border-neutral-800\"\n                aria-labelledby=\"merge-mining-dialog-title\"\n                aria-describedby=\"merge-mining-dialog-description\"\n              >\n                <DialogHeader>\n                  <DialogTitle id=\"merge-mining-dialog-title\">Understanding Merge Mining</DialogTitle>\n                  <DialogDescription id=\"merge-mining-dialog-description\">\n                    Discover how Elastos efficiently leverages Bitcoin's network security through advanced merge mining technology\n                  </DialogDescription>\n                </DialogHeader>\n                <div className=\"flex flex-col lg:flex-row gap-4 sm:gap-6 items-center\">\n                  <div className=\"text-muted-foreground space-y-4 sm:space-y-6 lg:w-1/2 text-left\">\n                    <p className=\"text-sm sm:text-base\">Merge mining allows miners to mine multiple cryptocurrencies simultaneously without requiring additional computing power. Think of it like this:</p>\n                    <ul className=\"list-disc ml-6 space-y-2 text-sm sm:text-base\">\n                      <li>When a miner solves a block for Bitcoin, they can reuse that same work to mine Elastos blocks</li>\n                      <li>This means Elastos gets Bitcoin's security without requiring extra energy</li>\n                      <li>It's like getting two rewards for doing one job</li>\n                    </ul>\n                    <p className=\"text-sm sm:text-base\">\n                      This is why Elastos's hashrate is so high - it's effectively borrowing roughly {((elastosHashrate/bitcoinHashrate) * 100).toFixed(1)}% of Bitcoin's massive mining power through merge mining!\n                    </p>\n                  </div>\n                  <div className=\"w-full lg:w-1/2 max-w-[320px] sm:max-w-none mx-auto\">\n                    <MergeMiningViz />\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {/* Colored Stats Cards REMOVED */}\n\n          <div className=\"mb-6\">\n            <BlockVisualizer />\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"font-medium flex items-center gap-2\">\n              <Server className=\"w-5 h-5 text-[#F6921A]\" />\n              <span className=\"font-[200]\">Compare to everyday devices:</span>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-2 mb-6 px-1\">\n              {(Object.entries(scales) as [ScaleType, Scale][]).map(([key, { icon, unit, explanation }]) => (\n                <TooltipProvider key={key} delayDuration={0}>\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      <Button\n                        variant={selectedScale === key ? \"default\" : \"outline\"}\n                        onClick={() => setSelectedScale(key)}\n                        className={cn(\n                          \"w-full gap-2 min-h-[2.5rem] px-2 py-1 font-[200]\",\n                          selectedScale === key && \"shadow-lg\"\n                        )}\n                      >\n                        <span>{scales[key].icon}</span>\n                        <span className=\"text-sm truncate\">{scales[key].buttonText || unit}</span>\n                      </Button>\n                    </TooltipTrigger>\n                    <TooltipContent side=\"top\" className=\"p-3 touch-auto\">\n                      <div className=\"text-sm space-y-2\">\n                        <p>{explanation}</p>\n                        {key === 'supercomputers' && (\n                          <>\n                            <p>Comparison details:</p>\n                            <ul className=\"list-disc pl-4 space-y-1\">\n                              <li>Peak Performance: 1.5 EH/s</li>\n                              <li>First exascale system</li>\n                              <li>Located at Oak Ridge Lab</li>\n                            </ul>\n                            <a \n                              href=\"https://www.olcf.ornl.gov/frontier/\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"block mt-2 text-blue-500 hover:text-blue-600 underline p-1\"\n                            >\n                              Learn more about Frontier\n                            </a>\n                          </>\n                        )}\n                      </div>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              ))}\n            </div>\n\n            <div className=\"space-y-4\">\n              <motion.div \n                className=\"relative h-28 bg-[rgba(246,146,26,0.10)] rounded-lg overflow-hidden shadow-md border border-[rgba(246,146,26,0.50)] dark:bg-[#3D2A18]\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3 }}\n              >\n                <div className=\"h-full flex items-center justify-between p-3\">\n                  <div className=\"flex-1\">\n                    <TooltipProvider>\n                      <Tooltip>\n                        <TooltipTrigger asChild>\n                          <div className=\"space-y-1\">\n                            <div className=\"font-[200] text-lg flex items-center gap-2 text-white\">\n                              Bitcoin Network\n                              <TooltipProvider>\n                                <Tooltip>\n                                  <TooltipTrigger asChild>\n                                    <Info className=\"w-4 h-4 text-white/70\" aria-label=\"Data from blockchain.info API\" />\n                                  </TooltipTrigger>\n                                  <TooltipContent>\n                                    <p className=\"text-sm\">Data from blockchain.info API</p>\n                                  </TooltipContent>\n                                </Tooltip>\n                              </TooltipProvider>\n                            </div>\n                            <div className=\"text-xl sm:text-2xl font-[200] text-white\">\n                              <span className=\"font-bold\">{formatNumber(calculateEquivalent(bitcoinHashrate, scales[selectedScale].base))}</span> {scales[selectedScale].unit}\n                            </div>\n                            <div className=\"flex items-center gap-4\">\n                              <span className=\"text-sm text-white font-bold\">{bitcoinHashrate.toFixed(2)} EH/s</span>\n                              <div className=\"w-24 h-2 bg-green-200 rounded-full overflow-hidden\">\n                                <div className=\"h-full w-full bg-green-500 rounded-full\" />\n                              </div>\n                              <span className=\"text-sm\">100%</span>\n                            </div>\n                          </div>\n                        </TooltipTrigger>\n                        <TooltipContent side=\"top\" align=\"start\" sideOffset={5} className=\"max-w-[250px]\">\n                          <p className=\"text-sm\">Bitcoin's network hashrate represents the total computing power securing the blockchain. Higher hashrate means better security.</p>\n                        </TooltipContent>\n                      </Tooltip>\n                    </TooltipProvider>\n                  </div>\n                </div>\n              </motion.div>\n\n              <motion.div \n                className=\"relative h-28 bg-[rgba(92,142,255,0.10)] rounded-lg overflow-hidden shadow-md border border-[rgba(92,142,255,0.50)] dark:bg-[#182A3D]\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: 0.2 }}\n              >\n                <div className=\"h-full flex items-center justify-between p-3\">\n                  <div className=\"flex-1\">\n                    <TooltipProvider>\n                      <Tooltip>\n                        <TooltipTrigger asChild>\n                          <div className=\"space-y-1\">\n                            <div className=\"font-[200] text-lg flex items-center gap-2 text-white\">\n                              Elastos Network\n                              <TooltipProvider>\n                                <Tooltip>\n                                  <TooltipTrigger asChild>\n                                    <Info className=\"w-4 h-4 text-white/70\" aria-label=\"Data from ela.elastos.io/api/v1/data-statistics API\" />\n                                  </TooltipTrigger>\n                                  <TooltipContent>\n                                    <p className=\"text-sm\">Data from ela.elastos.io/api/v1/data-statistics API</p>\n                                  </TooltipContent>\n                                </Tooltip>\n                              </TooltipProvider>\n                            </div>\n                            <div className=\"text-xl sm:text-2xl font-[200] text-white\">\n                              <span className=\"font-bold\">{formatNumber(calculateEquivalent(elastosHashrate, scales[selectedScale].base))}</span> {scales[selectedScale].unit}\n                            </div>\n                            <div className=\"flex items-center gap-4\">\n                              <span className=\"text-sm text-white font-bold\">{elastosHashrate.toFixed(2)} EH/s</span>\n                              <div className=\"w-24 h-2 bg-green-200 rounded-full overflow-hidden\">\n                                <div \n                                  className=\"h-full bg-green-500 rounded-full transition-all duration-500\"\n                                  style={{ width: `${(elastosHashrate/bitcoinHashrate) * 100}%` }}\n                                />\n                              </div>\n                              <span className=\"text-sm\">{((elastosHashrate/bitcoinHashrate) * 100).toFixed(1)}%</span>\n                            </div>\n                          </div>\n                        </TooltipTrigger>\n                        <TooltipContent side=\"top\" align=\"start\" sideOffset={5} className=\"max-w-[250px]\">\n                          <p className=\"text-sm\">Elastos leverages merge mining with Bitcoin, sharing about 48% of Bitcoin's hashrate for enhanced security without additional energy consumption.</p>\n                        </TooltipContent>\n                      </Tooltip>\n                    </TooltipProvider>\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n            <div className=\"bg-accent/10 p-4 rounded-lg\">\n              <div className=\"text-sm text-white mb-2\">\n                {selectedScale === 'supercomputers' ? (\n                  `Equivalent to ${formatNumber(calculateEquivalent(bitcoinHashrate, scales[selectedScale].base))} ${scales[selectedScale].unit}`\n                ) : (\n                  `Network power equivalent to ${formatNumber(calculateEquivalent(bitcoinHashrate, scales[selectedScale].base))} ${scales[selectedScale].unit}`\n                )}\n              </div>\n              <div className=\"text-xs text-white\">\n                {scales[selectedScale].details.map((detail, index) => (\n                  <div key={index}>{detail}</div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default HashrateVisualizer;","import React, { useState, useEffect } from 'react';\nimport HashrateVisualizer from '../components/HashrateVisualizer';\nimport { useHashrateData } from '@/hooks/useHashrateData';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { Dots_v2 } from \"@/components/ui/spinner\";\nimport { StackedCircularFooter } from \"@/components/ui/stacked-circular-footer\";\nimport { SEO } from '@/components/SEO'; // Import the SEO component\nimport { Helmet } from 'react-helmet';\nimport { WebPageStructuredData } from '@/components/StructuredData';\n\nconst SecurityPage = () => {\n  const { data: hashrateData, isLoading, error } = useHashrateData();\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    // Set error state if we get an error from the hook or after 10 seconds of loading\n    if (error) {\n      setIsError(true);\n    }\n\n    const timeout = setTimeout(() => {\n      if (isLoading) {\n        setIsError(true);\n      }\n    }, 10000);\n\n    return () => clearTimeout(timeout);\n  }, [error, isLoading]);\n\n  return (\n    <div className=\"min-h-screen bg-background dark:bg-[#171717] p-4 sm:p-6 md:p-8\">\n      <Helmet>\n        {/* Google Tag */}\n        <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-775BN8EH1L\"></script>\n        <script>\n          {`\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n            gtag('config', 'G-775BN8EH1L');\n          `}\n        </script>\n      </Helmet>\n      <SEO \n        title=\"Elastos Security | Bitcoin-Level Protection through Merged Mining\"\n        description=\"Discover how Elastos leverages Bitcoin's immense hashpower through merged mining to create one of the most secure blockchain networks in existence, providing unparalleled security without additional energy costs.\"\n        keywords=\"Elastos security, Bitcoin merged mining, blockchain security, hashrate, ELA security, Bitcoin hashpower, Bitcoin-backed security, secure blockchain, Elastos protection\"\n        ogImage=\"/images/Security.png\"\n        canonicalUrl=\"/security\"\n      />\n      <WebPageStructuredData\n        title=\"Elastos Security | Bitcoin-Level Protection\"\n        description=\"Discover how Elastos leverages Bitcoin's hashpower through merged mining to create one of the most secure blockchain networks in existence.\"\n        url=\"/security\"\n        imageUrl=\"/images/Security.png\"\n      />\n      {isError ? (\n        <Card className=\"max-w-4xl mx-auto dark:bg-[#151515] dark:border-neutral-800\">\n          <CardContent className=\"p-8 text-center\">\n            <h2 className=\"text-2xl font-[200] mb-4\">Data Loading Issue</h2>\n            <p className=\"mb-4 font-[200]\">We're having trouble fetching the security data at the moment.</p>\n            <p className=\"text-sm text-muted-foreground font-[200]\">\n              This could be due to API rate limits or temporary network issues.\n            </p>\n            <button \n              onClick={() => window.location.reload()} \n              className=\"mt-6 px-4 py-2 bg-[#F6921A] hover:bg-[#F6921A]/90 text-white rounded-full\"\n            >\n              Refresh Page\n            </button>\n          </CardContent>\n        </Card>\n      ) : isLoading ? (\n        <div className=\"flex justify-center items-center h-[70vh]\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto mb-4 w-12 h-12 rounded-full border-4 border-[#F6921A]/30 border-t-[#F6921A] animate-spin\"></div>\n            <p className=\"text-muted-foreground\">Loading security data...</p>\n          </div>\n        </div>\n      ) : (\n        <HashrateVisualizer />\n      )}\n      <StackedCircularFooter />\n    </div>\n  );\n};\n\nexport default SecurityPage;"],"names":["BlockVisualizer","currentBlock","setCurrentBlock","useState","isTransitioning","setIsTransitioning","timeAgo","setTimeAgo","showCopied","setShowCopied","EXPLORER_URL","truncateHash","hash","mobile","copyToClipboard","text","useEffect","updateTime","seconds","interval","handleNewBlock","newBlock","fetchLatestBlock","newBlockData","blockData","_a","error","jsx","Card","jsxs","Boxes","Hash","CheckCircle2","ServerCrash","Clock","ChevronRight","ExternalLink","Copy","FriendlyHashrate","locks","setLocks","containerRef","useRef","containerWidth","setContainerWidth","hashrateData","useHashrateData","bitcoinHashrate","updateWidth","prev","filtered","p","newLocks","moveInterval","lock","TooltipProvider","Tooltip","TooltipTrigger","Info","TooltipContent","_","i","Cpu","Lock","HashScaleViz","selectedScale","setSelectedScale","scales","getCurrentScale","renderLocks","scale","count","index","MergeMiningViz","securityPercentage","x","baseLock","HashrateVisualizer","Monitor","Building2","Laptop","Smartphone","isLoading","elastosHashrate","CardHeader","CardTitle","calculateEquivalent","hashrate","base","formatNumber","num","Zap","CardContent","Dialog","DialogTrigger","Button","Calculator","DialogContent","DialogHeader","DialogTitle","DialogDescription","Network","Server","key","icon","unit","explanation","cn","Fragment","motion","detail","SecurityPage","isError","setIsError","timeout","Helmet","SEO","WebPageStructuredData","StackedCircularFooter"],"mappings":"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"}