
        <div className="container mx-auto mt-32 mb-26 text-center">
          <div className="flex flex-col sm:flex-row items-center justify-center gap-4 mb-12">
            <img 
              src="/images/Elastos New Logo_Kit-03.png" 
              alt="Elastos Logo" 
              className="h-8 w-auto mb-3 sm:mb-0"
            />
            <h2 className="text-2xl sm:text-xl md:text-3xl lg:text-4xl font-bold text-white">
              Queen ELA: Married to Bitcoin since 2018.
            </h2>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-5xl mx-auto">
            <div className="bg-[#ececec] dark:bg-[#5C8EFF]/[0.06] rounded-lg p-3 sm:p-6 shadow-sm">
              <h3 className="text-lg font-medium mb-4">Current Price</h3>
              {isHashrateLoading ? (
                <div className="flex flex-col items-center justify-center h-[120px]">
                  <Spinner size="lg" />
                </div>
              ) : (
                <>
                  <p className="text-xl sm:text-2xl font-[200]">${hashrateData?.elaPrice?.toFixed(2) || '0.00'}</p>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mb-4">
                    Per ELA
                  </p>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5">
                    <div className="bg-[#F6921A] h-1.5 rounded-full" style={{ width: `${((hashrateData?.elaPrice || 0) / 77 * 100)}%` }} />
                  </div>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-2">{((hashrateData?.elaPrice || 0) / 77 * 100).toFixed(1)}% from ATH ($77.00)</p>
                </>
              )}
            </div>

            <div className="bg-[#ececec] dark:bg-[#5C8EFF]/[0.06] rounded-lg p-3 sm:p-6 shadow-sm">
              <h3 className="text-lg font-medium mb-4">Total Supply</h3>
              {isSupplyLoading ? (
                <div className="flex flex-col items-center justify-center h-[120px]">
                  <Spinner size="lg" />
                </div>
              ) : (
                <>
                  <p className="text-xl sm:text-2xl font-[200]">28,199,999 ELA</p>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">91.31% mined</p>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5 mt-4">
                    <div className="bg-[#F6921A] h-1.5 rounded-full" style={{ width: '91.31%' }} />
                  </div>
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-2">{(totalSupply || 0).toLocaleString()} ELA currently</p>
                </>
              )}
            </div>





            <div className="bg-[#ececec] dark:bg-[#5C8EFF]/[0.06] rounded-lg p-3 sm:p-6 shadow-sm">
              <h3 className="text-lg font-medium mb-4">Market Cap</h3>
              {isMarketCapLoading ? (
                <div className="flex flex-col items-center justify-center h-[120px]">
                  <Spinner size="lg" />
                </div>
              ) : (
                <>
                  <p className="text-xl sm:text-2xl font-[200]">${formatNumber(marketCapData?.elastosMarketCap ?? 0)}</p>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">{((marketCapData?.marketCapRatio ?? 0) * 100).toFixed(4)}% of BTC</p>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5 mt-4">
                    <div className="bg-[#F6921A] h-1.5 rounded-full" style={{ width: `${((marketCapData?.marketCapRatio ?? 0) * 100)}%` }} />
                  </div>
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-2">${formatNumber(marketCapData?.bitcoinMarketCap ?? 0)} BTC Cap</p>
                </>
              )}
            </div>





            <div className="bg-[#ececec] dark:bg-[#5C8EFF]/[0.06] rounded-lg p-3 sm:p-6 shadow-sm">
              <h3 className="text-lg font-medium mb-4">Current APR</h3>
              {!networkStats ? (
                <div className="flex flex-col items-center justify-center h-[120px]">
                  <Spinner size="lg" />
                </div>
              ) : (
                <>
                  <p className="text-xl sm:text-2xl font-[200]">3.29%</p>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">5,252,197 ELA staked</p>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5 mt-4">
                    <div 
                      className="bg-[#F6921A] h-1.5 rounded-full" 
                      style={{ 
                        width: `${(5252197 / (totalSupply || 25748861)) * 100}%` 
                      }} 
                    />
                  </div>
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-1">
                    {((5252197 / (totalSupply || 25748861)) * 100).toFixed(1)}% of circulating supply
                  </p>
                </>
              )}
            </div>




          </div>

          {/* Second Row */}


          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-5xl mx-auto mt-6">



            <div className="bg-[#ececec] dark:bg-[#5C8EFF]/[0.06] rounded-lg p-3 sm:p-6 shadow-sm">
              <h3 className="text-lg font-medium mb-4">BTC Security</h3>
              {isHashrateLoading ? (
                <div className="flex flex-col items-center justify-center h-[120px]">
                  <Spinner size="lg" />
                </div>
              ) : (
                <>
                  <p className="text-xl sm:text-2xl font-[200]">{((hashrateData?.elastosHashrate ?? 0) / (hashrateData?.bitcoinHashrate ?? 1) * 100).toFixed(2)}%</p>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">{Math.round(hashrateData?.elastosHashrate || 0)} EH/s of {Math.round(hashrateData?.bitcoinHashrate || 0)} EH/s</p>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5 mt-4">
                    <div className="bg-[#F6921A] h-1.5 rounded-full" style={{ width: `${((hashrateData?.elastosHashrate ?? 0) / (hashrateData?.bitcoinHashrate ?? 1) * 100)}%` }} />
                  </div>
                  <p className="text-xs text-gray-500 dark:text-gray-400 mt-2">{((hashrateData?.elastosHashrate ?? 0) / 1.102).toFixed(2)} Frontier Supercomputers</p>
                </>
              )}
            </div>


            <div className="bg-[#ececec] dark:bg-[#5C8EFF]/[0.06] rounded-lg p-3 sm:p-6 shadow-sm">
              <h3 className="text-lg font-medium mb-4">Latest Block By</h3>
              {!currentBlock ? (
                <div className="flex flex-col items-center justify-center h-[120px]">
                  <Spinner size="lg" />
                </div>
              ) : (
                <>
                  <p className="text-xl sm:text-2xl font-[200]">{currentBlock?.poolInfo?.poolName || 'Unknown'}</p>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">Mining Pool</p>
                  <div className="mt-4 pt-[2px] flex justify-center">
                    <button 
                      className="inline-flex px-3 py-2 bg-[rgba(92,142,255,0.15)] text-white rounded-full font-[200] transition-all items-center gap-1 border border-[rgba(92,142,255,0.25)] text-sm justify-center"
                      onClick={() => window.open(`https://ela.elastos.io/api/v1/block/${currentBlock?.hash}`, '_blank')}
                    >
                      <span>Verify</span>
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 35 34" fill="none">
                        <circle cx="17.333" cy="17" r="16.75" stroke="#5C8EFF" strokeOpacity="0.25" strokeWidth="1.5"/>
                        <path d="M17.3338 22.9405L23.2741 17.0002L17.3338 11.0598L16.4162 11.9774L20.7628 16.324H10.8622V17.6763H20.7628L16.4162 22.0229L17.3338 22.9405Z" fill="#5C8EFF"/>
                        <path d="M20.7628 17.6638H10.8747V16.3365H20.7628H20.7929L20.7716 16.3152L16.4338 11.9774L17.3338 11.0775L23.2564 17.0002L17.3338 22.9228L16.4338 22.0229L20.7716 17.6851L20.7929 17.6638H20.7628Z" stroke="#5C8EFF" strokeOpacity="0.25" strokeWidth="1.5"/>
                      </svg>
                    </button>
                  </div>
                </>
              )}
            </div>









            <div className="bg-[#ececec] dark:bg-[#5C8EFF]/[0.06] rounded-lg p-3 sm:p-6 shadow-sm">
              <h3 className="text-lg font-medium mb-4">Next 4 Year Halving</h3>
              {/* Halving info is static, no need for a loader */}
              <p className="text-xl sm:text-2xl font-[200]">Dec 1, 2025</p>
              <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">305d 17h 52m remaining</p>
              <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5 mt-4">
                <div className="bg-[#F6921A] h-1.5 rounded-full" style={{ 
                  width: `${((365 * 4 - 305) / (365 * 4)) * 100}%` 
                }} />
              </div>
              <p className="text-xs text-gray-500 dark:text-gray-400 mt-2">{((new Date().getTime() - new Date('2021-12-01').getTime()) / (new Date('2025-12-01').getTime() - new Date('2021-12-01').getTime()) * 100).toFixed(1)}% of cycle complete</p>
            </div>


            <div className="bg-[#ececec] dark:bg-[#5C8EFF]/[0.06] rounded-lg p-3 sm:p-6 shadow-sm">
              <h3 className="text-lg font-medium mb-4">Active Wallets</h3>
              {!networkStats ? (
                <div className="flex flex-col items-center justify-center h-[120px]">
                  <Spinner size="lg" />
                </div>
              ) : (
                <>
                  <p className="text-xl sm:text-2xl font-[200]">{networkStats?.walletAddresses?.toLocaleString() || '0'}</p>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">Total Addresses</p>
                  <div className="mt-4 pt-[2px] flex justify-center">
                    <button 
                      className="inline-flex px-3 py-2 bg-[rgba(92,142,255,0.15)] text-white rounded-full font-[200] transition-all items-center gap-1 border border-[rgba(92,142,255,0.25)] text-sm justify-center"
                      onClick={() => window.open("https://ela.elastos.io/api/v1/data-statistics/", '_blank')}
                    >
                      <span>Verify</span>
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 35 34" fill="none"><circle cx="17.333" cy="17" r="16.75" stroke="#5C8EFF" strokeOpacity="0.25" strokeWidth="1.5"/>
                        <path d="M17.3338 22.9405L23.2741 17.0002L17.3338 11.0598L16.4162 11.9774L20.7628 16.324H10.8622V17.6763H20.7628L16.4162 22.0229L17.3338 22.9405Z" fill="#5C8EFF"/>
                        <path d="M20.7628 17.6638H10.8747V16.3365H20.7628H20.7929L20.7716 16.3152L16.4338 11.9774L17.3338 11.0775L23.2564 17.0002L17.3338 22.9228L16.4338 22.0229L20.7716 17.6851L20.7929 17.6638H20.7628Z" stroke="#5C8EFF" strokeOpacity="0.25" strokeWidth="1.5"/>
                      </svg>
                    </button>
                  </div>
                </>
              )}
            </div>
          </div>

        </div>